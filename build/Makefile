# GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug_linux
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug_linux)
  ex1_config = debug_linux
  ex2_config = debug_linux
  lesson1_config = debug_linux
  lesson2_config = debug_linux
  lesson3_config = debug_linux
  lesson4_config = debug_linux
  lesson5_config = debug_linux
  lesson6_config = debug_linux
  lesson7_config = debug_linux
  lesson8_config = debug_linux
  lesson9_config = debug_linux
  multidraw_config = debug_linux
  multidraw2_config = debug_linux
  texturing_config = debug_linux
  modelviewer_config = debug_linux
  testprimitives_config = debug_linux
  grass_config = debug_linux
  sphereworld_color_config = debug_linux
  flying_config = debug_linux
  glm_modelviewer_config = debug_linux
  glm_texturing_config = debug_linux
  point_sprites_config = debug_linux
  glm_sphereworld_color_config = debug_linux
  glm_grass_config = debug_linux
  glm_flying_config = debug_linux
  left_handed_config = debug_linux
  gears_config = debug_linux
  test_poly_modes_config = debug_linux
  test_scissoring_config = debug_linux
  test_viewport_config = debug_linux
  test_clipping_config = debug_linux
  test_depthclamp_config = debug_linux
  test_line_depth_config = debug_linux
  test_aliasing_lines_config = debug_linux
  polylines_config = debug_linux
  client_arrays_config = debug_linux
  color_masking_config = debug_linux

else ifeq ($(config),debug_windows)
  ex1_config = debug_windows
  ex2_config = debug_windows
  lesson1_config = debug_windows
  lesson2_config = debug_windows
  lesson3_config = debug_windows
  lesson4_config = debug_windows
  lesson5_config = debug_windows
  lesson6_config = debug_windows
  lesson7_config = debug_windows
  lesson8_config = debug_windows
  lesson9_config = debug_windows
  multidraw_config = debug_windows
  multidraw2_config = debug_windows
  texturing_config = debug_windows
  modelviewer_config = debug_windows
  testprimitives_config = debug_windows
  grass_config = debug_windows
  sphereworld_color_config = debug_windows
  flying_config = debug_windows
  glm_modelviewer_config = debug_windows
  glm_texturing_config = debug_windows
  point_sprites_config = debug_windows
  glm_sphereworld_color_config = debug_windows
  glm_grass_config = debug_windows
  glm_flying_config = debug_windows
  left_handed_config = debug_windows
  gears_config = debug_windows
  test_poly_modes_config = debug_windows
  test_scissoring_config = debug_windows
  test_viewport_config = debug_windows
  test_clipping_config = debug_windows
  test_depthclamp_config = debug_windows
  test_line_depth_config = debug_windows
  test_aliasing_lines_config = debug_windows
  polylines_config = debug_windows
  client_arrays_config = debug_windows
  color_masking_config = debug_windows

else ifeq ($(config),release_linux)
  ex1_config = release_linux
  ex2_config = release_linux
  lesson1_config = release_linux
  lesson2_config = release_linux
  lesson3_config = release_linux
  lesson4_config = release_linux
  lesson5_config = release_linux
  lesson6_config = release_linux
  lesson7_config = release_linux
  lesson8_config = release_linux
  lesson9_config = release_linux
  multidraw_config = release_linux
  multidraw2_config = release_linux
  texturing_config = release_linux
  modelviewer_config = release_linux
  testprimitives_config = release_linux
  grass_config = release_linux
  sphereworld_color_config = release_linux
  flying_config = release_linux
  glm_modelviewer_config = release_linux
  glm_texturing_config = release_linux
  point_sprites_config = release_linux
  glm_sphereworld_color_config = release_linux
  glm_grass_config = release_linux
  glm_flying_config = release_linux
  left_handed_config = release_linux
  gears_config = release_linux
  test_poly_modes_config = release_linux
  test_scissoring_config = release_linux
  test_viewport_config = release_linux
  test_clipping_config = release_linux
  test_depthclamp_config = release_linux
  test_line_depth_config = release_linux
  test_aliasing_lines_config = release_linux
  polylines_config = release_linux
  client_arrays_config = release_linux
  color_masking_config = release_linux

else ifeq ($(config),release_windows)
  ex1_config = release_windows
  ex2_config = release_windows
  lesson1_config = release_windows
  lesson2_config = release_windows
  lesson3_config = release_windows
  lesson4_config = release_windows
  lesson5_config = release_windows
  lesson6_config = release_windows
  lesson7_config = release_windows
  lesson8_config = release_windows
  lesson9_config = release_windows
  multidraw_config = release_windows
  multidraw2_config = release_windows
  texturing_config = release_windows
  modelviewer_config = release_windows
  testprimitives_config = release_windows
  grass_config = release_windows
  sphereworld_color_config = release_windows
  flying_config = release_windows
  glm_modelviewer_config = release_windows
  glm_texturing_config = release_windows
  point_sprites_config = release_windows
  glm_sphereworld_color_config = release_windows
  glm_grass_config = release_windows
  glm_flying_config = release_windows
  left_handed_config = release_windows
  gears_config = release_windows
  test_poly_modes_config = release_windows
  test_scissoring_config = release_windows
  test_viewport_config = release_windows
  test_clipping_config = release_windows
  test_depthclamp_config = release_windows
  test_line_depth_config = release_windows
  test_aliasing_lines_config = release_windows
  polylines_config = release_windows
  client_arrays_config = release_windows
  color_masking_config = release_windows

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := ex1 ex2 lesson1 lesson2 lesson3 lesson4 lesson5 lesson6 lesson7 lesson8 lesson9 multidraw multidraw2 texturing modelviewer testprimitives grass sphereworld_color flying glm_modelviewer glm_texturing point_sprites glm_sphereworld_color glm_grass glm_flying left_handed gears test_poly_modes test_scissoring test_viewport test_clipping test_depthclamp test_line_depth test_aliasing_lines polylines client_arrays color_masking

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

ex1:
ifneq (,$(ex1_config))
	@echo "==== Building ex1 ($(ex1_config)) ===="
	@${MAKE} --no-print-directory -C . -f ex1.make config=$(ex1_config)
endif

ex2:
ifneq (,$(ex2_config))
	@echo "==== Building ex2 ($(ex2_config)) ===="
	@${MAKE} --no-print-directory -C . -f ex2.make config=$(ex2_config)
endif

lesson1:
ifneq (,$(lesson1_config))
	@echo "==== Building lesson1 ($(lesson1_config)) ===="
	@${MAKE} --no-print-directory -C . -f lesson1.make config=$(lesson1_config)
endif

lesson2:
ifneq (,$(lesson2_config))
	@echo "==== Building lesson2 ($(lesson2_config)) ===="
	@${MAKE} --no-print-directory -C . -f lesson2.make config=$(lesson2_config)
endif

lesson3:
ifneq (,$(lesson3_config))
	@echo "==== Building lesson3 ($(lesson3_config)) ===="
	@${MAKE} --no-print-directory -C . -f lesson3.make config=$(lesson3_config)
endif

lesson4:
ifneq (,$(lesson4_config))
	@echo "==== Building lesson4 ($(lesson4_config)) ===="
	@${MAKE} --no-print-directory -C . -f lesson4.make config=$(lesson4_config)
endif

lesson5:
ifneq (,$(lesson5_config))
	@echo "==== Building lesson5 ($(lesson5_config)) ===="
	@${MAKE} --no-print-directory -C . -f lesson5.make config=$(lesson5_config)
endif

lesson6:
ifneq (,$(lesson6_config))
	@echo "==== Building lesson6 ($(lesson6_config)) ===="
	@${MAKE} --no-print-directory -C . -f lesson6.make config=$(lesson6_config)
endif

lesson7:
ifneq (,$(lesson7_config))
	@echo "==== Building lesson7 ($(lesson7_config)) ===="
	@${MAKE} --no-print-directory -C . -f lesson7.make config=$(lesson7_config)
endif

lesson8:
ifneq (,$(lesson8_config))
	@echo "==== Building lesson8 ($(lesson8_config)) ===="
	@${MAKE} --no-print-directory -C . -f lesson8.make config=$(lesson8_config)
endif

lesson9:
ifneq (,$(lesson9_config))
	@echo "==== Building lesson9 ($(lesson9_config)) ===="
	@${MAKE} --no-print-directory -C . -f lesson9.make config=$(lesson9_config)
endif

multidraw:
ifneq (,$(multidraw_config))
	@echo "==== Building multidraw ($(multidraw_config)) ===="
	@${MAKE} --no-print-directory -C . -f multidraw.make config=$(multidraw_config)
endif

multidraw2:
ifneq (,$(multidraw2_config))
	@echo "==== Building multidraw2 ($(multidraw2_config)) ===="
	@${MAKE} --no-print-directory -C . -f multidraw2.make config=$(multidraw2_config)
endif

texturing:
ifneq (,$(texturing_config))
	@echo "==== Building texturing ($(texturing_config)) ===="
	@${MAKE} --no-print-directory -C . -f texturing.make config=$(texturing_config)
endif

modelviewer:
ifneq (,$(modelviewer_config))
	@echo "==== Building modelviewer ($(modelviewer_config)) ===="
	@${MAKE} --no-print-directory -C . -f modelviewer.make config=$(modelviewer_config)
endif

testprimitives:
ifneq (,$(testprimitives_config))
	@echo "==== Building testprimitives ($(testprimitives_config)) ===="
	@${MAKE} --no-print-directory -C . -f testprimitives.make config=$(testprimitives_config)
endif

grass:
ifneq (,$(grass_config))
	@echo "==== Building grass ($(grass_config)) ===="
	@${MAKE} --no-print-directory -C . -f grass.make config=$(grass_config)
endif

sphereworld_color:
ifneq (,$(sphereworld_color_config))
	@echo "==== Building sphereworld_color ($(sphereworld_color_config)) ===="
	@${MAKE} --no-print-directory -C . -f sphereworld_color.make config=$(sphereworld_color_config)
endif

flying:
ifneq (,$(flying_config))
	@echo "==== Building flying ($(flying_config)) ===="
	@${MAKE} --no-print-directory -C . -f flying.make config=$(flying_config)
endif

glm_modelviewer:
ifneq (,$(glm_modelviewer_config))
	@echo "==== Building glm_modelviewer ($(glm_modelviewer_config)) ===="
	@${MAKE} --no-print-directory -C . -f glm_modelviewer.make config=$(glm_modelviewer_config)
endif

glm_texturing:
ifneq (,$(glm_texturing_config))
	@echo "==== Building glm_texturing ($(glm_texturing_config)) ===="
	@${MAKE} --no-print-directory -C . -f glm_texturing.make config=$(glm_texturing_config)
endif

point_sprites:
ifneq (,$(point_sprites_config))
	@echo "==== Building point_sprites ($(point_sprites_config)) ===="
	@${MAKE} --no-print-directory -C . -f point_sprites.make config=$(point_sprites_config)
endif

glm_sphereworld_color:
ifneq (,$(glm_sphereworld_color_config))
	@echo "==== Building glm_sphereworld_color ($(glm_sphereworld_color_config)) ===="
	@${MAKE} --no-print-directory -C . -f glm_sphereworld_color.make config=$(glm_sphereworld_color_config)
endif

glm_grass:
ifneq (,$(glm_grass_config))
	@echo "==== Building glm_grass ($(glm_grass_config)) ===="
	@${MAKE} --no-print-directory -C . -f glm_grass.make config=$(glm_grass_config)
endif

glm_flying:
ifneq (,$(glm_flying_config))
	@echo "==== Building glm_flying ($(glm_flying_config)) ===="
	@${MAKE} --no-print-directory -C . -f glm_flying.make config=$(glm_flying_config)
endif

left_handed:
ifneq (,$(left_handed_config))
	@echo "==== Building left_handed ($(left_handed_config)) ===="
	@${MAKE} --no-print-directory -C . -f left_handed.make config=$(left_handed_config)
endif

gears:
ifneq (,$(gears_config))
	@echo "==== Building gears ($(gears_config)) ===="
	@${MAKE} --no-print-directory -C . -f gears.make config=$(gears_config)
endif

test_poly_modes:
ifneq (,$(test_poly_modes_config))
	@echo "==== Building test_poly_modes ($(test_poly_modes_config)) ===="
	@${MAKE} --no-print-directory -C . -f test_poly_modes.make config=$(test_poly_modes_config)
endif

test_scissoring:
ifneq (,$(test_scissoring_config))
	@echo "==== Building test_scissoring ($(test_scissoring_config)) ===="
	@${MAKE} --no-print-directory -C . -f test_scissoring.make config=$(test_scissoring_config)
endif

test_viewport:
ifneq (,$(test_viewport_config))
	@echo "==== Building test_viewport ($(test_viewport_config)) ===="
	@${MAKE} --no-print-directory -C . -f test_viewport.make config=$(test_viewport_config)
endif

test_clipping:
ifneq (,$(test_clipping_config))
	@echo "==== Building test_clipping ($(test_clipping_config)) ===="
	@${MAKE} --no-print-directory -C . -f test_clipping.make config=$(test_clipping_config)
endif

test_depthclamp:
ifneq (,$(test_depthclamp_config))
	@echo "==== Building test_depthclamp ($(test_depthclamp_config)) ===="
	@${MAKE} --no-print-directory -C . -f test_depthclamp.make config=$(test_depthclamp_config)
endif

test_line_depth:
ifneq (,$(test_line_depth_config))
	@echo "==== Building test_line_depth ($(test_line_depth_config)) ===="
	@${MAKE} --no-print-directory -C . -f test_line_depth.make config=$(test_line_depth_config)
endif

test_aliasing_lines:
ifneq (,$(test_aliasing_lines_config))
	@echo "==== Building test_aliasing_lines ($(test_aliasing_lines_config)) ===="
	@${MAKE} --no-print-directory -C . -f test_aliasing_lines.make config=$(test_aliasing_lines_config)
endif

polylines:
ifneq (,$(polylines_config))
	@echo "==== Building polylines ($(polylines_config)) ===="
	@${MAKE} --no-print-directory -C . -f polylines.make config=$(polylines_config)
endif

client_arrays:
ifneq (,$(client_arrays_config))
	@echo "==== Building client_arrays ($(client_arrays_config)) ===="
	@${MAKE} --no-print-directory -C . -f client_arrays.make config=$(client_arrays_config)
endif

color_masking:
ifneq (,$(color_masking_config))
	@echo "==== Building color_masking ($(color_masking_config)) ===="
	@${MAKE} --no-print-directory -C . -f color_masking.make config=$(color_masking_config)
endif

clean:
	@${MAKE} --no-print-directory -C . -f ex1.make clean
	@${MAKE} --no-print-directory -C . -f ex2.make clean
	@${MAKE} --no-print-directory -C . -f lesson1.make clean
	@${MAKE} --no-print-directory -C . -f lesson2.make clean
	@${MAKE} --no-print-directory -C . -f lesson3.make clean
	@${MAKE} --no-print-directory -C . -f lesson4.make clean
	@${MAKE} --no-print-directory -C . -f lesson5.make clean
	@${MAKE} --no-print-directory -C . -f lesson6.make clean
	@${MAKE} --no-print-directory -C . -f lesson7.make clean
	@${MAKE} --no-print-directory -C . -f lesson8.make clean
	@${MAKE} --no-print-directory -C . -f lesson9.make clean
	@${MAKE} --no-print-directory -C . -f multidraw.make clean
	@${MAKE} --no-print-directory -C . -f multidraw2.make clean
	@${MAKE} --no-print-directory -C . -f texturing.make clean
	@${MAKE} --no-print-directory -C . -f modelviewer.make clean
	@${MAKE} --no-print-directory -C . -f testprimitives.make clean
	@${MAKE} --no-print-directory -C . -f grass.make clean
	@${MAKE} --no-print-directory -C . -f sphereworld_color.make clean
	@${MAKE} --no-print-directory -C . -f flying.make clean
	@${MAKE} --no-print-directory -C . -f glm_modelviewer.make clean
	@${MAKE} --no-print-directory -C . -f glm_texturing.make clean
	@${MAKE} --no-print-directory -C . -f point_sprites.make clean
	@${MAKE} --no-print-directory -C . -f glm_sphereworld_color.make clean
	@${MAKE} --no-print-directory -C . -f glm_grass.make clean
	@${MAKE} --no-print-directory -C . -f glm_flying.make clean
	@${MAKE} --no-print-directory -C . -f left_handed.make clean
	@${MAKE} --no-print-directory -C . -f gears.make clean
	@${MAKE} --no-print-directory -C . -f test_poly_modes.make clean
	@${MAKE} --no-print-directory -C . -f test_scissoring.make clean
	@${MAKE} --no-print-directory -C . -f test_viewport.make clean
	@${MAKE} --no-print-directory -C . -f test_clipping.make clean
	@${MAKE} --no-print-directory -C . -f test_depthclamp.make clean
	@${MAKE} --no-print-directory -C . -f test_line_depth.make clean
	@${MAKE} --no-print-directory -C . -f test_aliasing_lines.make clean
	@${MAKE} --no-print-directory -C . -f polylines.make clean
	@${MAKE} --no-print-directory -C . -f client_arrays.make clean
	@${MAKE} --no-print-directory -C . -f color_masking.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug_linux"
	@echo "  debug_windows"
	@echo "  release_linux"
	@echo "  release_windows"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   ex1"
	@echo "   ex2"
	@echo "   lesson1"
	@echo "   lesson2"
	@echo "   lesson3"
	@echo "   lesson4"
	@echo "   lesson5"
	@echo "   lesson6"
	@echo "   lesson7"
	@echo "   lesson8"
	@echo "   lesson9"
	@echo "   multidraw"
	@echo "   multidraw2"
	@echo "   texturing"
	@echo "   modelviewer"
	@echo "   testprimitives"
	@echo "   grass"
	@echo "   sphereworld_color"
	@echo "   flying"
	@echo "   glm_modelviewer"
	@echo "   glm_texturing"
	@echo "   point_sprites"
	@echo "   glm_sphereworld_color"
	@echo "   glm_grass"
	@echo "   glm_flying"
	@echo "   left_handed"
	@echo "   gears"
	@echo "   test_poly_modes"
	@echo "   test_scissoring"
	@echo "   test_viewport"
	@echo "   test_clipping"
	@echo "   test_depthclamp"
	@echo "   test_line_depth"
	@echo "   test_aliasing_lines"
	@echo "   polylines"
	@echo "   client_arrays"
	@echo "   color_masking"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"