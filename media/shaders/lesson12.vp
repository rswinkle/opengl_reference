#version 330 core

//w is filled with 1 automatically for vertex
//since I only passed x,y,z
layout (location = 0) in vec4 aVertexPosition;
layout (location = 1) in vec3 aVertexNormal;
layout (location = 2) in vec2 aTextureCoord;

uniform mat4 uMVMatrix;
uniform mat4 uPMatrix;
uniform mat3 uNMatrix;

uniform vec3 uAmbientColor;

uniform vec3 uPointLightingLocation;
uniform vec3 uPointLightingColor;

uniform bool uUseLighting;

out vec2 vTextureCoord;
out vec3 vLightWeighting;

void main(void)
{
	vec4 mvPosition = uMVMatrix * aVertexPosition;
	gl_Position = uPMatrix * mvPosition;
	vTextureCoord = aTextureCoord;

	if (!uUseLighting) {
		vLightWeighting = vec3(1.0, 1.0, 1.0);
	} else {
		vec3 lightDirection = normalize(uPointLightingLocation - mvPosition.xyz);
		vec3 a_c = uAmbientColor;
		if (length(lightDirection) == 0) {
			a_c = vec3(0, 0, 1);
		}

		vec3 transformedNormal = uNMatrix * aVertexNormal;
		float directionalLightWeighting = max(dot(transformedNormal, lightDirection), 0.0);
		//if (directionalLightWeighting  0) {
		//	a_c = vec3(1, 0, 0);
		//}

		if (uPointLightingColor == vec3(0)) {
			a_c = vec3(1, 0, 0);
		}

		//vLightWeighting = uAmbientColor + uPointLightingColor * directionalLightWeighting;
		vLightWeighting = a_c + uPointLightingColor * directionalLightWeighting;
	}
}

